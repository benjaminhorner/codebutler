define(function () {

    /**
     * Description
     * @method slice
     * @param {} arr
     * @param {} offset
     * @return CallExpression
     */
    function slice(arr, offset){
        return Array.prototype.slice.call(arr, offset || 0);
    }

    /**
     * Creates a partially applied function.
     */
    /**
     * Description
     * @method partial
     * @param {} fn
     * @param {} var_args
     * @return FunctionExpression
     */
    function partial(fn, var_args){
        var argsArr = slice(arguments, 1); //curried args
        return function(){
            return fn.apply(this, argsArr.concat(slice(arguments)));
        };
    }

    return partial;

});
