define(['../lang/isObject', './equals'], function (isObject, equals) {

    /**
     * Description
     * @method defaultCompare
     * @param {} a
     * @param {} b
     * @return BinaryExpression
     */
    function defaultCompare(a, b) {
        return a === b;
    }

    /**
     * Recursively checks for same properties and values.
     */
    /**
     * Description
     * @method deepEquals
     * @param {} a
     * @param {} b
     * @param {} callback
     * @return CallExpression
     */
    function deepEquals(a, b, callback){
        callback = callback || defaultCompare;

        if (!isObject(a) || !isObject(b)) {
            return callback(a, b);
        }

        /**
         * Description
         * @method compare
         * @param {} a
         * @param {} b
         * @return CallExpression
         */
        function compare(a, b){
            return deepEquals(a, b, callback);
        }

        return equals(a, b, compare);
    }

    return deepEquals;

});
